 =================
 Benchmark Summary
 =================

| Library                     | Encode <br> speed | Encode <br> % of max | Decode <br> speed | Decode <br> % of max | Size | Size <br> % of json |
| :-------------------------- | ----------------: | -------------------: | ----------------: | -------------------: | ---: | ------------------: |
| binpackr(no validation)     |       7,878 kop/s |                 100% |       19,905 kops |                  98% |  13B |                 13% |
| binpackr                    |       7,450 kop/s |                  95% |       20,384 kops |                 100% |  13B |                 13% |
| avro                        |       4,870 kop/s |                  62% |       15,588 kops |                  76% |  15B |                 15% |
| msgpackr(shared structures) |       2,020 kop/s |                  26% |        5,806 kops |                  28% |  20B |                 20% |
| msgpackr                    |       1,768 kop/s |                  22% |        2,365 kops |                  12% |  71B |                 71% |
| protobufjs                  |       1,587 kop/s |                  20% |        4,820 kops |                  24% |  29B |                 29% |
| json                        |         750 kop/s |                  10% |          780 kops |                   4% | 100B |                100% |
| binary-parser               |                 - |                    - |        1,161 kops |                   6% |  15B |                 15% |

All benchmarks were performed on node/v16.7.0; Darwin; Intel(R) Core(TM) i9-8950HK CPU @ 2.90GHz

Open link below to show the encoding and decoding speed in chart
----------------------------------------------------------------
https://quickchart.io/chart?c={type:"horizontalBar",data:{labels:["binpackr(no validation)","binpackr","avro","msgpackr(shared structures)","msgpackr","protobufjs","json","binary-parser"],datasets:[{label:"Encode",data:[7878,7450,4870,2020,1768,1587,750,0]},{label:"Decode",data:[19905,20384,15588,5806,2365,4820,780,1161]}]},options:{title:{display:true,text:"Speed (op/s) - longer is better"},plugins:{tickFormat:{suffix:"k"}},scales:{xAxes:[{ticks:{callback:(value) => value.toLocaleString()}}]}}}

Open link below to show the encode byte count in chart
------------------------------------------------------
https://quickchart.io/chart?c={type:"horizontalBar",data:{labels:["binpackr(no validation)","binpackr","avro","binary-parser","msgpackr(shared structures)","protobufjs","msgpackr","json"],datasets:[{label:"Binary size",data:[13,13,15,15,20,29,71,100]}]},options:{title:{display:true,text:"Size - shorter is better"},plugins:{tickFormat:{suffix:"B"}}}}

